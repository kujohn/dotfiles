# Change prefix key
unbind C-b
set -g prefix C-f
bind C-f send-prefix

# settings
set -sg repeat-time 600
set -s focus-events on

set -s escape-time 1
set -g base-index 1
setw -g pane-base-index 1



# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

set-option -g status-position top
set-window-option -g xterm-keys on
set-window-option -g automatic-rename off
set-window-option -g status-interval 5
set-window-option -g mode-keys vi
bind-key Tab switch-client -l

# split current window vertically, horizontally
bind-key v split-window -h
bind-key s split-window -v
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

###  # toggle mouse
bind m set -g mouse
set -g mouse on

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# copy to Mac OSX clipboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

#---------------------------------------
# Theme
#---------------------------------------
# Status line
set -g status-style default
set -g status-right-length 80
set -g status-left-length 100
set -g window-status-separator ""

# Bars ---------------------------------
# set -g status-left "#[fg=cyan,bg=default]#[fg=black,bg=cyan] \uf40b #S #[fg=cyan,bg=default] #{tasks_status}"
set -g status-left " "
set -g status-right "#[fg=brightcyan,bg=brightblack]#[fg=brightblack,bg=brightcyan] %Y-%m-%d | %l:%M #[fg=brightblack,bg=brightcyan]|#[fg=brightblack,bg=brightcyan] #(whoami) #[fg=brightcyan,bg=default]"

# Windows ------------------------------
set -g status-justify centre
set -g window-status-format "#[fg=white,bg=default] #W "
set -g window-status-current-format "#[fg=cyan,bg=default]#[fg=brightblack,bg=cyan]>#[fg=brightblack,bg=cyan] #W #[fg=cyan,bg=default]"

# auto save resurrect on detach
bind-key d run-shell "#{@resurrect-save-script-path} quiet" \; detach-client

# Plugins ------------------------------
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin "arcticicestudio/nord-tmux"

run '~/.tmux/plugins/tpm/tpm'

set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'kitty,fullscreen'

# instantiate plugin manager for tmux
set-option -sa terminal-overrides ",xterm*:Tc"
set -g default-terminal "xterm-kitty"
#set-option -ga terminal-overrides ",xterm-kitty*:Tc:smso=^[[3m"

####################################################################################  typescript
[language-server.typescript-language-server]
command = "typescript-language-server"
args = ["--stdio"]
config.hostInfo = "helix"

[language-server.typescript-language-server.config.completions]
completeFunctionCalls = true

[language-server.typescript-language-server.config.typescript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[language-server.typescript-language-server.config.javascript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

################################################################################### Eslint
[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
format = { enable = true }
nodePath = ""
quiet = false
rulesCustomizations = []
run = "onType"
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = false } }
codeActionsOnSave = { mode = "all", "source.fixAll.eslint" = true }
experimental = {}
problems = { shortenToSingleLine = false }

###################################################################################  HTML
[language-server.html-language-server]
command = "vscode-html-language-server"
args = ["--stdio"]

###################################################################################  CSS
[language-server.css-languageserver]
command = "css-languageserver"
args = ["--stdio"]

###################################################################################  tailwind
[language-server.tailwindcss-react]
command = "tailwindcss-language-server"
args = ["--stdio"]

###################################################################################  golang
[language-server.gopls]
command = "gopls"

[language-server.gopls.config.hints]
assignVariableTypes = true
compositeLiteralFields = true
constantValues = true
functionTypeParameters = true
parameterNames = true
rangeVariableTypes = true

[language-server.golangci-lint-lsp]
command = "golangci-lint-langserver"

[language-server.golangci-lint-lsp.config]
command = [
  "golangci-lint",
  "run",
  "--out-format",
  "json",
  "--issues-exit-code=1",
]

###################################################################################  configuration
[[language]]
name = "typescript"
auto-format = true
formatter = { command = 'prettier', args = [ "--config", ".prettierrc", "--parser", "typescript", ] }
language-servers = [ "typescript-language-server", "eslint", "tailwindcss-react" ]

[[language]]
name = "tsx"
auto-format = true
formatter = { command = 'prettier', args = [ "--config", ".prettierrc", "--parser", "typescript", ] }
language-servers = [ "typescript-language-server", "eslint", "tailwindcss-react" ]


[[language]]
name = "html"
auto-format = true
formatter = { command = 'prettier', args = [ "--config", ".prettierrc", "--parser", "typescript", ] }
language-servers = [ "html-language-server", "css-languageserver", "tailwindcss-react" ]

[[language]]
name = "json"
auto-format = true
language-servers = [{ name = "vscode-json-language-server" }]
formatter = { command = "dprint", args = [ "fmt", "--config", "/Users/johnku/dprint.json", "--stdin", "json", ] }

[[language]]
name = "css"
auto-format = true
language-servers = ["css-languageserver", 'tailwindcss-react']
formatter = { command = "dprint", args = [ "fmt", "--config", "/Users/johnku/dprint.json", "--stdin", "css", ] }

#####  typescript
[language-server.typescript-language-server]
command = "typescript-language-server"
args = ["--stdio"]
config.hostInfo = "helix"

[language-server.typescript-language-server.config.completions]
completeFunctionCalls = true

[language-server.typescript-language-server.config.typescript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[language-server.typescript-language-server.config.javascript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

#####  HTML
[language-server.html-language-server]
command = "vscode-html-language-server"
args = ["--stdio"]

#####  CSS
[language-server.css-languageserver]
command = "css-languageserver"
args = ["--stdio"]

#####  tailwind
[language-server.tailwindcss-react]
command = "tailwindcss-language-server"
args = ["--stdio"]

#####  emmet
[language-server.emmet-ls]
command = "emmet-ls"
args = ["--stdio"]

#####  golang
[language-server.gopls]
command = "gopls"

[language-server.gopls.config.hints]
assignVariableTypes = true
compositeLiteralFields = true
constantValues = true
functionTypeParameters = true
parameterNames = true
rangeVariableTypes = true

[language-server.golangci-lint-lsp]
command = "golangci-lint-langserver"

[language-server.golangci-lint-lsp.config]
command = [
  "golangci-lint",
  "run",
  "--out-format",
  "json",
  "--issues-exit-code=1",
]

#####  configuration
[[language]]
name = "typescript"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "tailwindcss-react",
]

[[language]]
name = "tsx"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "emmet-ls",
  "tailwindcss-react",
]

[[language]]
name = "jsx"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "emmet-ls",
  "tailwindcss-react",
]

[[language]]
name = "javascript"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "tailwindcss-react",
]

[[language]]
name = "html"
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
language-servers = [
  { name = "emmet-ls" },
  { name = "html-language-server" },
  { name = "css-languageserver", except-features = [
    "format",
  ] },
  { name = "tailwindcss-react" },
]

[[language]]
name = "json"
auto-format = true
language-servers = [{ name = "vscode-json-language-server" }]
formatter = { command = "dprint", args = [
  "fmt",
  "--config",
  "/Users/johnku/dprint.json",
  "--stdin",
  "json",
] }

[[language]]
name = "css"
auto-format = true
language-servers = ["css-languageserver", "vscode-css-language-server"]
formatter = { command = "dprint", args = [
  "fmt",
  "--config",
  "/Users/johnku/dprint.json",
  "--stdin",
  "css",
] }

[[language]]
name = "toml"
auto-format = true
formatter = { command = "taplo", args = ["fmt", "-"] }
